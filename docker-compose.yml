services:
  api:
    build: .
    environment:
      - BUILD_ENV=${BUILD_ENV}
      - BATCHIEPATCHIE_CONFIG=batchiepatchie-dockercompose-config.toml
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - .:/go/src/github.com/AdRoll/batchiepatchie
    ports:
      - "9999:9999"
      - "5454:5454"
    privileged: true   # Privileges are dropped by docker_run.sh, privileges needed for user setup in local development
    ulimits:
      nproc: 65535
      nofile:
        soft: 90000
        hard: 90000
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    build: .
    volumes:
      - .:/go/src/github.com/AdRoll/batchiepatchie
    command: sh -c 'cd migrations && goose postgres "user=postgres dbname=postgres sslmode=disable host=postgres password=123456" up'
    depends_on:
      postgres:
        condition: service_healthy


  postgres:
    image: postgres:9.6.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: 123456
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/opt/frontend/src
      - ./frontend/public:/opt/frontend/public
    ports:
      - "8080:8080"
    command: npm run dev

networks:
  default:
    ipam:
      config:
       - subnet: "172.29.0.0/16"

